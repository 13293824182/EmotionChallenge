name: "morphNet"
layer {
  name: "Data"
  type: "Python"
  top: "data"
  top: "single_label"
  top: "landmark_offset"
  include {
    phase: TRAIN
  }
  python_param {
    module: "data_layer"
    layer: "DataLayerWithLandmark"
    param_str: "{'batch_size': 32, 'list_file': '../data/train_ld_shuffle.txt', 'im_h': 224, 'im_w': 224, 'landmark_dim': 136 }"
  }
}
layer {
  name: "Data"
  type: "Python"
  top: "data"
  top: "single_label"
  top: "landmark_offset"
  include {
    phase: TEST
  }
  python_param {
    module: "data_layer"
    layer: "DataLayerWithLandmark"
    param_str: "{'batch_size': 50, 'list_file': '../data/val_ld_shuffle.txt', 'im_h': 224, 'im_w': 224, 'landmark_dim': 136 }"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
#  blobs_lr: 1
#  blobs_lr: 2
#  weight_decay: 1
#  weight_decay: 0
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "prelu1"
  type: "PReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
#  blobs_lr: 1
#  blobs_lr: 2
#  weight_decay: 1
#  weight_decay: 0
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "prelu2"
  type: "PReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
#  blobs_lr: 1
#  blobs_lr: 2
#  weight_decay: 1
#  weight_decay: 0
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "prelu3"
  type: "PReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
#  blobs_lr: 1
#  blobs_lr: 2
#  weight_decay: 1
#  weight_decay: 0
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "prelu4"
  type: "PReLU"
  bottom: "conv4"
  top: "conv4"
}

layer {
  name: "face_conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "face_conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "face_prelu5"
  type: "PReLU"
  bottom: "face_conv5"
  top: "face_conv5"
}
layer {
  name: "face_pool5"
  type: "Pooling"
  bottom: "face_conv5"
  top: "face_pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "face_fc6"
  type: "InnerProduct"
  bottom: "face_pool5"
  top: "face_fc6"
#  blobs_lr: 1
#  blobs_lr: 2
#  weight_decay: 1
#  weight_decay: 0
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
# layer {
#   name: "face_norm"
#   type: "Softmax"
#   bottom: "face_fc6"
#   top: "face_norm"
# }
# layer {
#   name: "landmark_offset_norm"
#   type: "Softmax"
#   bottom: "landmark_offset"
#   top: "landmark_offset_norm"
# }
layer {
  name: "concat_feature"
  type: "Concat"
  bottom: "face_fc6"
  bottom: "landmark_offset"
  top: "concat_feature"
  concat_param {
    concat_dim: 1
  }
}

layer {
  name: "concat_fc7"
  type: "InnerProduct"
  bottom: "concat_feature"
  top: "concat_fc7"
#  blobs_lr: 1
#  blobs_lr: 2
#  weight_decay: 1
#  weight_decay: 0
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "face_prelu7"
  type: "PReLU"
  bottom: "concat_fc7"
  top: "concat_fc7"
}
layer {
  name: "concat_drop7"
  type: "Dropout"
  bottom: "concat_fc7"
  top: "concat_fc7"
  dropout_param {
    dropout_ratio: 0.8
  }
}
layer {
  name: "fc8"
  type: "InnerProduct"
  bottom: "concat_fc7"
  top: "fc8"
#  blobs_lr: 1
#  blobs_lr: 2
#  weight_decay: 1
#  weight_decay: 0
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}

layer {
  name: "emotion_loss"
  type: "HingeLoss"
  bottom: "fc8"
  bottom: "single_label"
  top: "emotion_loss"
  hinge_loss_param {
    norm: L2
  }
  loss_weight: 1
}

layer{
  name: "emotion_accuracy"
  type: "Accuracy"
  bottom: "fc8"
  bottom: "single_label"
  top: "emotion_accuracy"
  include: { phase:TEST }
}
